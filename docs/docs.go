// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Daniel Mena and Kmilo Denis Glez",
            "url": "https://github.com/dani-fmena and https://github.com/kmilodenisglez",
            "email": "kmilo.denis.glez@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "post": {
                "description": "Intent to grant authentication using the provider user's credentials and the specified  auth provider\n\nUser Credentials:\n\n|  Username   | Password    | \n| ----------- | -----------|\n| richard.sargon@meinermail.com | password1 |\n| tom.carter@meinermail.com | password2 |\n",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User authentication",
                "parameters": [
                    {
                        "description": "User Login Credential",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserCredIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "err.wrong_auth_provider",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "401": {
                        "description": "err.unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.json_parse",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "504": {
                        "description": "err.network",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint invalidated a previously granted access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "err.unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.generic",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.User"
                            }
                        }
                    },
                    "401": {
                        "description": "err.unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.generic",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            }
        },
        "/database/populate": {
            "post": {
                "description": "Populate the database with the following data:\n\n` + "`" + `two` + "`" + ` users for authentication:\n\n` + "`" + `` + "`" + `` + "`" + `json\n[\n  {\n    \"passphrase\": \"0b14d501a594442a01c6859541bcb3e8164d183d32937b851835442f69d5c94e\",\n    \"username\": \"richard.sargon@meinermail.com\",\n    \"name\": \"Richard Sargon\"\n  },\n  {\n    \"passphrase\": \"6cf615d5bcaac778352a8f1f3360d23f02f34ec182e259897fd6ce485d7870d4\",\n    \"username\": \"tom.carter@meinermail.com\",\n    \"name\": \"Tom Carter\"\n  }\n]\n` + "`" + `` + "`" + `` + "`" + `\n\n` + "`" + `` + "`" + `` + "`" + `text\npassword for 'richard.sargon@meinermail.com' user is: password1\npassword for 'tom.carter@meinermail.com' user is: password2\n` + "`" + `` + "`" + `` + "`" + `\n\n` + "`" + `ten` + "`" + ` drones:\n\n\nModel enum for a Drone:\n` + "`" + `` + "`" + `` + "`" + `text\n0 =\u003e Lightweight\n1 =\u003e Middleweight\n2 =\u003e Cruiserweight\n3 =\u003e Heavyweight\n\n` + "`" + `` + "`" + `` + "`" + `\n\nState enum for a Drone:\n` + "`" + `` + "`" + `` + "`" + `text\n0 =\u003e IDLE\n1 =\u003e LOADING\n2 =\u003e LOADED\n3 =\u003e DELIVERING\n4 =\u003e DELIVERED\n5 =\u003e RETURNING\n` + "`" + `` + "`" + `` + "`" + `\n\ngenerated drone collection:\n` + "`" + `` + "`" + `` + "`" + `json\n[\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174001\",\"model\":2,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174002\",\"model\":1,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174003\",\"model\":3,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174004\",\"model\":1,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174005\",\"model\":3,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174006\",\"model\":0,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174007\",\"model\":2,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174008\",\"model\":3,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174009\",\"model\":0,...},\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174010\",\"model\":0,...}\n]\n` + "`" + `` + "`" + `` + "`" + `\n\nseven (7) medications:\n` + "`" + `` + "`" + `` + "`" + `json\n[\n  {\"name\":\"a random string\",\"weight\":115,\"code\":\"a random code\",\"image\":\"ZmFrZV9pbWFnZQ==\"}, \n  {\"name\":\"a random string\",\"weight\":10,\"code\":\"a random code\",\"image\":\"ZmFrZV9pbWFnZQ==\"},\n  {\"name\":\"a random string\",\"weight\":210,\"code\":\"a random code\",\"image\":\"ZmFrZV9pbWFnZQ==\"},\n  {\"name\":\"a random string\",\"weight\":34,\"code\":\"a random code\",\"image\":\"ZmFrZV9pbWFnZQ==\"}\n  ...\n]\n` + "`" + `` + "`" + `` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Populate the database with fake data",
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "err.processing_param",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "401": {
                        "description": "err.unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.database_related",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "504": {
                        "description": "err.network",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            }
        },
        "/drones": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all drones or you can filter by status\n\n\nModel enum for a Drone:\n` + "`" + `` + "`" + `` + "`" + `text\n0 =\u003e Lightweight\n1 =\u003e Middleweight\n2 =\u003e Cruiserweight\n3 =\u003e Heavyweight\n\n` + "`" + `` + "`" + `` + "`" + `\n\nState enum for a Drone:\n` + "`" + `` + "`" + `` + "`" + `text\n0 =\u003e IDLE\n1 =\u003e LOADING\n2 =\u003e LOADED\n3 =\u003e DELIVERING\n4 =\u003e DELIVERED\n5 =\u003e RETURNING\n` + "`" + `` + "`" + `` + "`" + `",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drones"
                ],
                "summary": "Get drones",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        "type": "integer",
                        "description": "drone state",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Drone"
                            }
                        }
                    },
                    "400": {
                        "description": "err.processing_param",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.database_related",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "504": {
                        "description": "err.network",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register or update a drone in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drones"
                ],
                "summary": "Registers a new drone, also updates a previously inserted drone",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Drone data",
                        "name": "drone",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RequestDrone"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "err.processing_param",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "401": {
                        "description": "err.unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.database_related",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "504": {
                        "description": "err.network",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            }
        },
        "/drones/{serialNumber}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a drone by the serialNumber",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drones"
                ],
                "summary": "Get a drone by serialNumber",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Serial number of a drone",
                        "name": "serialNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Drone"
                        }
                    },
                    "400": {
                        "description": "err.processing_param",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.database_related",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "504": {
                        "description": "err.network",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            }
        },
        "/medications": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Return the medication items\n\nTake the code medication item as the unique identifier.\n\nExample Response body:\n` + "`" + `` + "`" + `` + "`" + `` + "`" + `json\n[\n  {\n    \"name\": \"Hcj6VWVAzP1g\",\n    \"weight\": 700,\n    \"code\": \"OJ02IBPL0U\",\n    \"image\": \"ZmFrZV9pbWFnZQ==\"\n  },\n  {\n    \"name\": \"CANCAPITAL\",\n    \"weight\": 490,\n    \"code\": \"60FJFAQ93H\",\n    \"image\": \"ZmFrZV9pbWFnZQ==\"\n  },...\n]\n` + "`" + `` + "`" + `` + "`" + `` + "`" + `\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medications"
                ],
                "summary": "Get medications",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Medication"
                            }
                        }
                    },
                    "400": {
                        "description": "err.processing_param",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.database_related",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "504": {
                        "description": "err.network",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            }
        },
        "/medications/items/{serialNumber}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Checking loaded medication items for a given drone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medications"
                ],
                "summary": "Checking loaded medication items for a given drone",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Serial number of a drone",
                        "name": "serialNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "err.processing_param",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.database_related",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "504": {
                        "description": "err.network",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Load or Update a drone with medication items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "medications"
                ],
                "summary": "Load a drone with medication items",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Serial number of a drone",
                        "name": "serialNumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Medication item codes' collection",
                        "name": "medicationItemCodes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "err.processing_param",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "401": {
                        "description": "err.unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "500": {
                        "description": "err.database_related",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    },
                    "504": {
                        "description": "err.network",
                        "schema": {
                            "$ref": "#/definitions/dto.Problem"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Drone": {
            "description": "Drone item information",
            "type": "object",
            "properties": {
                "batteryCapacity": {
                    "type": "number"
                },
                "model": {
                    "type": "integer"
                },
                "serialNumber": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                },
                "weightLimit": {
                    "type": "number"
                }
            }
        },
        "dto.Medication": {
            "description": "Medication item information",
            "type": "object",
            "properties": {
                "code": {
                    "description": "we assume that the code is unique",
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "dto.Problem": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string",
                    "example": "Some error details"
                },
                "status": {
                    "type": "integer",
                    "example": 503
                },
                "title": {
                    "type": "string",
                    "example": "err_code"
                }
            }
        },
        "dto.RequestDrone": {
            "description": "drone model without the weightLimit, it is used for endpoint request the weight limit is calculated from the drone's model (Lightweight, Middleweight, Cruiserweight, Heavyweight)",
            "type": "object",
            "properties": {
                "batteryCapacity": {
                    "type": "number"
                },
                "model": {
                    "type": "integer"
                },
                "serialNumber": {
                    "type": "string"
                },
                "state": {
                    "type": "integer"
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "passphrase": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserCredIn": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3,
                    "example": "password1"
                },
                "username": {
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 3,
                    "example": "richard.sargon@meinermail.com"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "github template restapi",
	Description:      "REST API that allows clients to communicate with ... (i.e. **dispatch controller**)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
