basePath: /
definitions:
  dto.Drone:
    description: Drone item information
    properties:
      batteryCapacity:
        type: number
      model:
        type: integer
      serialNumber:
        type: string
      state:
        type: integer
      weightLimit:
        type: number
    type: object
  dto.Medication:
    description: Medication item information
    properties:
      code:
        description: we assume that the code is unique
        type: string
      image:
        type: string
      name:
        type: string
      weight:
        type: number
    type: object
  dto.Problem:
    properties:
      detail:
        example: Some error details
        type: string
      status:
        example: 503
        type: integer
      title:
        example: err_code
        type: string
    type: object
  dto.RequestDrone:
    description: drone model without the weightLimit, it is used for endpoint request
      the weight limit is calculated from the drone's model (Lightweight, Middleweight,
      Cruiserweight, Heavyweight)
    properties:
      batteryCapacity:
        type: number
      model:
        type: integer
      serialNumber:
        type: string
      state:
        type: integer
    type: object
  dto.User:
    properties:
      name:
        type: string
      passphrase:
        type: string
      username:
        type: string
    type: object
  dto.UserCredIn:
    properties:
      password:
        example: password1
        maxLength: 20
        minLength: 3
        type: string
      username:
        example: richard.sargon@meinermail.com
        maxLength: 60
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
info:
  contact:
    email: kmilo.denis.glez@gmail.com
    name: Daniel Mena and Kmilo Denis Glez
    url: https://github.com/dani-fmena and https://github.com/kmilodenisglez
  description: REST API that allows clients to communicate with ... (i.e. **dispatch
    controller**)
  title: github template restapi
  version: "0.1"
paths:
  /auth:
    post:
      consumes:
      - multipart/form-data
      description: "Intent to grant authentication using the provider user's credentials
        and the specified  auth provider\n\nUser Credentials:\n\n|  Username   | Password
        \   | \n| ----------- | -----------|\n| richard.sargon@meinermail.com | password1
        |\n| tom.carter@meinermail.com | password2 |\n"
      parameters:
      - description: User Login Credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/dto.UserCredIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: err.wrong_auth_provider
          schema:
            $ref: '#/definitions/dto.Problem'
        "401":
          description: err.unauthorized
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.json_parse
          schema:
            $ref: '#/definitions/dto.Problem'
        "504":
          description: err.network
          schema:
            $ref: '#/definitions/dto.Problem'
      summary: User authentication
      tags:
      - Auth
  /auth/logout:
    get:
      description: This endpoint invalidated a previously granted access token
      parameters:
      - default: Bearer <Add access token here>
        description: Insert access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: OK
        "401":
          description: err.unauthorized
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.generic
          schema:
            $ref: '#/definitions/dto.Problem'
      security:
      - ApiKeyAuth: []
      summary: User logout
      tags:
      - Auth
  /auth/user:
    get:
      parameters:
      - default: Bearer <Add access token here>
        description: Insert access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.User'
            type: array
        "401":
          description: err.unauthorized
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.generic
          schema:
            $ref: '#/definitions/dto.Problem'
      security:
      - ApiKeyAuth: []
      tags:
      - Auth
  /database/populate:
    post:
      consumes:
      - application/json
      description: "Populate the database with the following data:\n\n`two` users
        for authentication:\n\n```json\n[\n  {\n    \"passphrase\": \"0b14d501a594442a01c6859541bcb3e8164d183d32937b851835442f69d5c94e\",\n
        \   \"username\": \"richard.sargon@meinermail.com\",\n    \"name\": \"Richard
        Sargon\"\n  },\n  {\n    \"passphrase\": \"6cf615d5bcaac778352a8f1f3360d23f02f34ec182e259897fd6ce485d7870d4\",\n
        \   \"username\": \"tom.carter@meinermail.com\",\n    \"name\": \"Tom Carter\"\n
        \ }\n]\n```\n\n```text\npassword for 'richard.sargon@meinermail.com' user
        is: password1\npassword for 'tom.carter@meinermail.com' user is: password2\n```\n\n`ten`
        drones:\n\n\nModel enum for a Drone:\n```text\n0 => Lightweight\n1 => Middleweight\n2
        => Cruiserweight\n3 => Heavyweight\n\n```\n\nState enum for a Drone:\n```text\n0
        => IDLE\n1 => LOADING\n2 => LOADED\n3 => DELIVERING\n4 => DELIVERED\n5 =>
        RETURNING\n```\n\ngenerated drone collection:\n```json\n[\n  {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174001\",\"model\":2,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174002\",\"model\":1,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174003\",\"model\":3,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174004\",\"model\":1,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174005\",\"model\":3,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174006\",\"model\":0,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174007\",\"model\":2,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174008\",\"model\":3,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174009\",\"model\":0,...},\n
        \ {\"serialNumber\":\"123e4567-e89b-12d3-a456-426614174010\",\"model\":0,...}\n]\n```\n\nseven
        (7) medications:\n```json\n[\n  {\"name\":\"a random string\",\"weight\":115,\"code\":\"a
        random code\",\"image\":\"ZmFrZV9pbWFnZQ==\"}, \n  {\"name\":\"a random string\",\"weight\":10,\"code\":\"a
        random code\",\"image\":\"ZmFrZV9pbWFnZQ==\"},\n  {\"name\":\"a random string\",\"weight\":210,\"code\":\"a
        random code\",\"image\":\"ZmFrZV9pbWFnZQ==\"},\n  {\"name\":\"a random string\",\"weight\":34,\"code\":\"a
        random code\",\"image\":\"ZmFrZV9pbWFnZQ==\"}\n  ...\n]\n```"
      produces:
      - application/json
      responses:
        "204":
          description: OK
        "400":
          description: err.processing_param
          schema:
            $ref: '#/definitions/dto.Problem'
        "401":
          description: err.unauthorized
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.database_related
          schema:
            $ref: '#/definitions/dto.Problem'
        "504":
          description: err.network
          schema:
            $ref: '#/definitions/dto.Problem'
      summary: Populate the database with fake data
      tags:
      - database
  /drones:
    get:
      consumes:
      - application/json
      description: |-
        Get all drones or you can filter by status


        Model enum for a Drone:
        ```text
        0 => Lightweight
        1 => Middleweight
        2 => Cruiserweight
        3 => Heavyweight

        ```

        State enum for a Drone:
        ```text
        0 => IDLE
        1 => LOADING
        2 => LOADED
        3 => DELIVERING
        4 => DELIVERED
        5 => RETURNING
        ```
      parameters:
      - default: Bearer <Add access token here>
        description: Insert access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: drone state
        enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        in: query
        name: state
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Drone'
            type: array
        "400":
          description: err.processing_param
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.database_related
          schema:
            $ref: '#/definitions/dto.Problem'
        "504":
          description: err.network
          schema:
            $ref: '#/definitions/dto.Problem'
      security:
      - ApiKeyAuth: []
      summary: Get drones
      tags:
      - drones
    post:
      consumes:
      - application/json
      description: Register or update a drone in database
      parameters:
      - default: Bearer <Add access token here>
        description: Insert access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Drone data
        in: body
        name: drone
        required: true
        schema:
          $ref: '#/definitions/dto.RequestDrone'
      produces:
      - application/json
      responses:
        "204":
          description: OK
        "400":
          description: err.processing_param
          schema:
            $ref: '#/definitions/dto.Problem'
        "401":
          description: err.unauthorized
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.database_related
          schema:
            $ref: '#/definitions/dto.Problem'
        "504":
          description: err.network
          schema:
            $ref: '#/definitions/dto.Problem'
      security:
      - ApiKeyAuth: []
      summary: Registers a new drone, also updates a previously inserted drone
      tags:
      - drones
  /drones/{serialNumber}:
    get:
      consumes:
      - application/json
      description: Get a drone by the serialNumber
      parameters:
      - default: Bearer <Add access token here>
        description: Insert access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Serial number of a drone
        format: string
        in: path
        name: serialNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Drone'
        "400":
          description: err.processing_param
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.database_related
          schema:
            $ref: '#/definitions/dto.Problem'
        "504":
          description: err.network
          schema:
            $ref: '#/definitions/dto.Problem'
      security:
      - ApiKeyAuth: []
      summary: Get a drone by serialNumber
      tags:
      - drones
  /medications:
    get:
      consumes:
      - application/json
      description: |
        Return the medication items

        Take the code medication item as the unique identifier.

        Example Response body:
        ````json
        [
          {
            "name": "Hcj6VWVAzP1g",
            "weight": 700,
            "code": "OJ02IBPL0U",
            "image": "ZmFrZV9pbWFnZQ=="
          },
          {
            "name": "CANCAPITAL",
            "weight": 490,
            "code": "60FJFAQ93H",
            "image": "ZmFrZV9pbWFnZQ=="
          },...
        ]
        ````
      parameters:
      - default: Bearer <Add access token here>
        description: Insert access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Medication'
            type: array
        "400":
          description: err.processing_param
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.database_related
          schema:
            $ref: '#/definitions/dto.Problem'
        "504":
          description: err.network
          schema:
            $ref: '#/definitions/dto.Problem'
      security:
      - ApiKeyAuth: []
      summary: Get medications
      tags:
      - medications
  /medications/items/{serialNumber}:
    get:
      consumes:
      - application/json
      description: Checking loaded medication items for a given drone
      parameters:
      - default: Bearer <Add access token here>
        description: Insert access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Serial number of a drone
        format: string
        in: path
        name: serialNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: err.processing_param
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.database_related
          schema:
            $ref: '#/definitions/dto.Problem'
        "504":
          description: err.network
          schema:
            $ref: '#/definitions/dto.Problem'
      security:
      - ApiKeyAuth: []
      summary: Checking loaded medication items for a given drone
      tags:
      - medications
    post:
      consumes:
      - application/json
      description: Load or Update a drone with medication items
      parameters:
      - default: Bearer <Add access token here>
        description: Insert access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Serial number of a drone
        format: string
        in: path
        name: serialNumber
        required: true
        type: string
      - description: Medication item codes' collection
        in: body
        name: medicationItemCodes
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "204":
          description: OK
        "400":
          description: err.processing_param
          schema:
            $ref: '#/definitions/dto.Problem'
        "401":
          description: err.unauthorized
          schema:
            $ref: '#/definitions/dto.Problem'
        "500":
          description: err.database_related
          schema:
            $ref: '#/definitions/dto.Problem'
        "504":
          description: err.network
          schema:
            $ref: '#/definitions/dto.Problem'
      security:
      - ApiKeyAuth: []
      summary: Load a drone with medication items
      tags:
      - medications
swagger: "2.0"
